from pptx import Presentation
from pptx.util import Inches, Pt
import io
import re
import textwrap

def clean_text(text):
    """
    Cleans input text by removing unnecessary special characters and ensuring proper spacing.
    """
    if isinstance(text, list):
        text = "\n".join(text)

    text = re.sub(r'[*#]+', '', text)  # Remove unwanted symbols
    text = re.sub(r'\s+', ' ', text).strip()  # Normalize spaces
    return text

def format_text_with_bullets(text):
    """
    Ensures that existing numbered points (1., 2., 3.) are properly formatted with spacing.
    """
    sentences = re.split(r'(?<=[.!?])\s+', text)  # Split by punctuation
    formatted_lines = []

    for sentence in sentences:
        if re.match(r'^\d+\.', sentence.strip()):  # If numbered point
            formatted_lines.append(sentence.strip())  # Add spacing
        else:
            formatted_lines.append(sentence.strip())  # Keep it as normal text
    
    return formatted_lines

def add_slide(prs, title, content):
    """
    Adds a slide with a title, a properly padded textbox, and formatted bullet points.
    """
    slide_layout = prs.slide_layouts[5]  # Title Only layout
    slide = prs.slides.add_slide(slide_layout)

    # Title Formatting
    title_shape = slide.shapes.title
    title_shape.text = title
    title_shape.text_frame.paragraphs[0].font.bold = True
    title_shape.text_frame.paragraphs[0].font.size = Pt(28)
    title_shape.text_frame.paragraphs[0].font.name = "Calibri"  # Set font for title

    # Rectangular Text Box for Content
    textbox = slide.shapes.add_textbox(Inches(0.5), Inches(1.5), Inches(9), Inches(5))
    text_frame = textbox.text_frame
    text_frame.word_wrap = True  # Ensure text wraps within the textbox

    for paragraph in content:
        p = text_frame.add_paragraph()
        p.text = paragraph
        p.font.size = Pt(18)  # Readable font size
        p.space_after = Pt(8)  # Consistent spacing
        p.font.name = "Calibri"  # Set font for body text

        if re.match(r'^\d+\.', paragraph.strip()):  # If numbered list
            p.level = 0  # Main bullet point
        else:
            p.level = 1  # Sub-point

def create_presentation(title, text):
    """
    Generates a PowerPoint presentation with properly formatted text and bullets.
    """
    prs = Presentation("Ion.pptx")  # Load Ion Theme

    # Title Slide
    slide_layout = prs.slide_layouts[0]
    slide = prs.slides.add_slide(slide_layout)
    slide.shapes.title.text = title
    slide.shapes.title.text_frame.paragraphs[0].font.name = "Calibri"  # Set font for title
    slide.shapes.title.text_frame.paragraphs[0].font.size = Pt(36)  # Large font for title
    slide.placeholders[1].text = "Generated by AI"
    slide.placeholders[1].text_frame.paragraphs[0].font.name = "Calibri"  # Set font for subtitle
    slide.placeholders[1].text_frame.paragraphs[0].font.size = Pt(18)  # Smaller font for subtitle

    # Process text and ensure proper formatting
    formatted_text = format_text_with_bullets(text)

    # Split content into chunks for multiple slides
    max_lines_per_slide = 7  # Maximum lines per slide
    for i in range(0, len(formatted_text), max_lines_per_slide):
        slide_content = formatted_text[i:i + max_lines_per_slide]
        add_slide(prs, "Key Points", slide_content)

    # Save presentation to memory
    pptx_io = io.BytesIO()
    prs.save(pptx_io)
    pptx_io.seek(0)
    return pptx_io
